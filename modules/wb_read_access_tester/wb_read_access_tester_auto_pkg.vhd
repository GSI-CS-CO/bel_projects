--! @file        wb_read_access_tester_auto_pkg.vhd
--  DesignUnit   wb_read_access_tester_auto
--! @author      M. Kreider <>
--! @date        11/02/2025
--! @version     0.0.1
--! @copyright   2025 GSI Helmholtz Centre for Heavy Ion Research GmbH
--!

--! @brief AUTOGENERATED WISHBONE-SLAVE PACKAGE FOR wb_read_access_tester.vhd
--!
--------------------------------------------------------------------------------
--! This library is free software; you can redistribute it and/or
--! modify it under the terms of the GNU Lesser General Public
--! License as published by the Free Software Foundation; either
--! version 3 of the License, or (at your option) any later version.
--!
--! This library is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--! Lesser General Public License for more details.
--!
--! You should have received a copy of the GNU Lesser General Public
--! License along with this library. If not, see <http://www.gnu.org/licenses/>.
--------------------------------------------------------------------------------

-- ***********************************************************
-- ** WARNING - THIS IS AUTO-GENERATED CODE! DO NOT MODIFY! **
-- ***********************************************************
--
-- If you want to change the interface,
-- modify wb_read_access_tester.xml and re-run 'python wbgenplus.py wb_read_access_tester.xml' !

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wishbone_pkg.all;
use work.wbgenplus_pkg.all;
use work.genram_pkg.all;
package wb_read_access_tester_auto_pkg is

  constant c_fuse_GET           : natural := 16#0000000000000000000000000#; -- ro, 32 b, Fuse to indicate if the register below has been read.
  constant c_read_test_reg_GET  : natural := 16#0000000000000000000000004#; -- ro, 32 b, Read only register that burns a fuse if it was accessed.

  --| Component ---------------- wb_read_access_tester_auto -----------------------------------|
  component wb_read_access_tester_auto is
  Port(
    clk_sys_i   : std_logic;                            -- Clock input for sys domain
    rst_sys_n_i : std_logic;                            -- Reset input (active low) for sys domain
    error_i     : in  std_logic_vector(1-1 downto 0);   -- Error control
    fuse_i      : in  std_logic_vector(32-1 downto 0);  -- Fuse to indicate if the register below has been read.
    fuse_V_i    : in  std_logic_vector(1-1 downto 0);   -- Valid flag - fuse
    stall_i     : in  std_logic_vector(1-1 downto 0);   -- flow control
    
    data_i      : in  t_wishbone_slave_in;
    data_o      : out t_wishbone_slave_out

  );
  end component;

  constant c_wb_read_access_tester_auto_sdb : t_sdb_device := (
  abi_class     => x"0000", -- undocumented device
  abi_ver_major => x"01",
  abi_ver_minor => x"00",
  wbd_endian    => c_sdb_endian_big,
  wbd_width     => x"7", -- 8/16/32-bit port granularity
  sdb_component => (
  addr_first    => x"0000000000000000",
  addr_last     => x"0000000000000007",
  product => (
  vendor_id     => x"0000000000000651",
  device_id     => x"2ead7e57",
  version       => x"00000001",
  date          => x"20250211",
  name          => "Wb read access auto")));

end wb_read_access_tester_auto_pkg;
package body wb_read_access_tester_auto_pkg is
end wb_read_access_tester_auto_pkg;
