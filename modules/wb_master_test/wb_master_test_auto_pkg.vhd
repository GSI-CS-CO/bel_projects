--! @file        wb_master_test_auto_pkg.vhd
--  DesignUnit   wb_master_test_auto
--! @author      M. Kreider <>
--! @date        11/04/2025
--! @version     0.0.1
--! @copyright   2025 GSI Helmholtz Centre for Heavy Ion Research GmbH
--!

--! @brief AUTOGENERATED WISHBONE-SLAVE PACKAGE FOR wb_master_test.vhd
--!
--------------------------------------------------------------------------------
--! This library is free software; you can redistribute it and/or
--! modify it under the terms of the GNU Lesser General Public
--! License as published by the Free Software Foundation; either
--! version 3 of the License, or (at your option) any later version.
--!
--! This library is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--! Lesser General Public License for more details.
--!
--! You should have received a copy of the GNU Lesser General Public
--! License along with this library. If not, see <http://www.gnu.org/licenses/>.
--------------------------------------------------------------------------------

-- ***********************************************************
-- ** WARNING - THIS IS AUTO-GENERATED CODE! DO NOT MODIFY! **
-- ***********************************************************
--
-- If you want to change the interface,
-- modify wb_master_test.xml and re-run 'python wbgenplus.py wb_master_test.xml' !

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wishbone_pkg.all;
use work.wbgenplus_pkg.all;
use work.genram_pkg.all;
package wb_master_test_auto_pkg is

  constant c_fuse_read_GET      : natural := 16#000000000000000000000000000000000000000000000000000000000000000000000000000#; -- ro, 32 b, Fuse to indicate if the register below has been read.
  constant c_read_test_reg_GET  : natural := 16#000000000000000000000000000000000000000000000000000000000000000000000000004#; -- ro, 32 b, Read only register that burns a fuse if it was accessed.
  constant c_fuse_write_GET     : natural := 16#000000000000000000000000000000000000000000000000000000000000000000000000008#; -- ro, 32 b, Fuse to indicate if the register below has been written.
  constant c_write_test_reg_OWR : natural := 16#00000000000000000000000000000000000000000000000000000000000000000000000000c#; -- wo, 32 b, Write only register that burns a fuse if it was accessed.

  --| Component -------------------- wb_master_test_auto --------------------------------------|
  component wb_master_test_auto is
  Port(
    clk_sys_i         : std_logic;                            -- Clock input for sys domain
    rst_sys_n_i       : std_logic;                            -- Reset input (active low) for sys domain
    error_i           : in  std_logic_vector(1-1 downto 0);   -- Error control
    fuse_read_i       : in  std_logic_vector(32-1 downto 0);  -- Fuse to indicate if the register below has been read.
    fuse_read_V_i     : in  std_logic_vector(1-1 downto 0);   -- Valid flag - fuse_read
    fuse_write_i      : in  std_logic_vector(32-1 downto 0);  -- Fuse to indicate if the register below has been written.
    fuse_write_V_i    : in  std_logic_vector(1-1 downto 0);   -- Valid flag - fuse_write
    stall_i           : in  std_logic_vector(1-1 downto 0);   -- flow control
    write_test_reg_o  : out std_logic_vector(32-1 downto 0);  -- Write only register that burns a fuse if it was accessed.
    
    data_i            : in  t_wishbone_slave_in;
    data_o            : out t_wishbone_slave_out

    
  );
  end component;

  constant c_wb_master_test_data_sdb : t_sdb_device := (
  abi_class     => x"0000", -- undocumented device
  abi_ver_major => x"01",
  abi_ver_minor => x"00",
  wbd_endian    => c_sdb_endian_big,
  wbd_width     => x"7", -- 8/16/32-bit port granularity
  sdb_component => (
  addr_first    => x"0000000000000000",
  addr_last     => x"000000000000000f",
  product => (
  vendor_id     => x"0000000000000651",
  device_id     => x"2ead7e57",
  version       => x"00000001",
  date          => x"20250411",
  name          => "Wb master test     ")));

end wb_master_test_auto_pkg;
package body wb_master_test_auto_pkg is
end wb_master_test_auto_pkg;
